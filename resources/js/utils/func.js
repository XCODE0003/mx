function copyToClipboard(text) {
    navigator.clipboard.writeText(text);
}

/**
 * Форматирует текст задания для корректного отображения
 * @param {string} text - исходный текст задания
 * @returns {string} отформатированный текст
 */
function formatTaskText(text) {
    if (!text) return '';

    // Предварительная очистка и нормализация
    text = text
        // Нормализуем переносы строк
        .replace(/\r\n/g, '\n')
        .replace(/\r/g, '\n')

        // Склеиваем разорванные маркеры вида "(\n1)" -> "(1)"
        .replace(/\(\s*\n\s*(\d+)\)/g, '($1)')
        // И вариант с пробелом перед скобкой в конце строки: " ... (\n2)" -> "\n(2)"
        .replace(/\s*\(\s*\n\s*(\d+)\)/g, '\n($1)')
        // Убираем перенос перед закрывающей скобкой в пометке "(предложение N\n)" -> "(предложение N)"
        .replace(/\(предложение\s*(\d+)\s*\n\s*\)/gi, '(предложение $1)')

        // Схлопываем любые пробелы/переносы внутри пометки "(предложение N)"
        .replace(/\(\s*предложение[\s\S]*?\)/gi, (s) => s
            .replace(/[\s\u00A0]+/g, ' ')
            .replace(/\s\)/g, ')')
        )

        // Убираем перенос после закрывающей скобки пометки в текстовой стадии
        .replace(/\(предложение\s*(\d+)\)\s*\n+/gi, '(предложение $1) ')
        // Убираем перенос между числом и закрывающей скобкой в текстовой стадии
        .replace(/\(предложение\s*([0-9]+)\s*[\r\n]+\s*\)/gi, '(предложение $1)')
        // Нормализуем любые пробелы/переносы внутри пометки "(предложение N)"
        .replace(/\(\s*предложение[\s\u00A0]*([0-9]+)[\s\u00A0]*\)/gi, '(предложение $1)')
        // Убираем переносы перед знаками препинания: перенос + ".,;:!?" => без переноса
        .replace(/([\p{L}\p{N}\)])\s*\n\s*([\.,;:!?])/gu, '$1$2 ')

                // Исправляем специфические проблемы с форматированием
        // Случай: "1) текст (предложение\n1) 2) другой текст"
        .replace(/(\d+)\)\s*([^(\n]+)\(предложение\s*\n\s*\1\)\s*(\d+)\)/g, '$1) $2(предложение $1)\n$3)')

        // Исправляем разорванные ссылки на предложения
        .replace(/\(предложение\s*\n\s*(\d+)\)/g, '(предложение $1)')

        // Исправляем случаи типа "1) текст (предложение\n1)" - когда номер предложения на новой строке
        .replace(/(\d+)\)\s*([^(\n]+)\(предложение\s*\n\s*(\d+)\)/g, '$1) $2(предложение $3)')

        // Защищаем номера внутри пометки "(предложение N)" от токенизации
        .replace(/(предложение\s*)(\d+)\)/gi, '$1@@PRED$2@@)')

        // Токенизируем варианты ответов вида "1)" для стабильной обработки (не трогаем уже защищённые)
        .replace(/(^|\s)(\d+)\)\s*/g, '$1|||OPT:$2||| ')

        // Добавляем переносы строк перед каждым вариантом, если они идут в одной строке
        .replace(/\s*\|\|\|OPT:/g, '\n|||OPT:')
        // Убираем возможный начальный перевод строки перед первым вариантом
        .replace(/^\n\|\|\|OPT:/, '|||OPT:')

        // Схлопываем возможные подряд идущие одинаковые токены
        .replace(/\|\|\|OPT:(\d+)\|\|\|\s*\|\|\|OPT:\1\|\|\|/g, '|||OPT:$1|||')

        // Переносим знаки препинания (.,;:!?) с отдельной строки к предыдущей
        .replace(/([^\n])\n\s*([\.,;:!?])(?=\s*(?:\n|$))/g, '$1$2')

        // Удаляем переносы перед знаками препинания (.,;:!?»”)
        .replace(/\n\s*([\.,;:!\?»”])/g, '$1 ')

        // Переносим открывающую кавычку на новую строку после точки/вопроса/восклицательного знака
        .replace(/([\.!\?])\s*(["«])/g, '$1\n$2')

        // Нормализуем пробелы (но сохраняем переносы строк)
        .replace(/[ \t]+/g, ' ');

    return text
        // Заменяем переносы строк на HTML теги
        .replace(/\n/g, '<br>')

        // Форматируем нумерованные предложения в скобках
        .replace(/\((\d+)\)/g, '<br><strong>($1)</strong>')

        // Форматируем заголовки разделов (заглавными буквами) - улучшенная версия
        .replace(/^([А-ЯЁ][А-ЯЁ\s]{2,}[А-ЯЁ])\s*$/gm, '<br><strong>$1</strong><br>')

                // Специальная обработка проблемного форматирования вариантов ответов
        // Исправляем случаи типа "1) текст (предложение\n1) 2) другой текст"
        .replace(/(\d+)\)\s*([^(\n]+)\(предложение\s*(\n|\r\n?)\s*\1\)\s*(\d+)\)/g, '$1) $2(предложение $1)$3$4)')

        // Исправляем разорванные номера предложений в скобках
        .replace(/\(предложение\s*(\n|\r\n?)\s*(\d+)\)/g, '(предложение $2)')

        // Преобразуем токены вариантов ответов в оформленный HTML
        .replace(/\|\|\|OPT:(\d+)\|\|\|/g, '<br><strong>$1)</strong> ')

        // Восстанавливаем номера внутри "(предложение N)"
        .replace(/@@PRED(\d+)@@/g, '$1')
        // Удаляем <br> внутри скобок с пометкой, если он туда попал
        .replace(/\(предложение[^)]*?<br\s*\/?>[^)]*?\)/gi, (m) => m.replace(/<br\s*\/?>/gi, ' '))
        // Убираем <br>, идущий сразу после пометки
        .replace(/\(предложение\s*(\d+)\)\s*<br\s*\/?>/gi, '(предложение $1) ')
        // Убираем <br>, если он стоит прямо перед закрывающей круглой скобкой
        .replace(/<br\s*\/?>\s*\)/gi, ')')

        // Жёстко: убираем любые <br> внутри любых круглых скобок
        .replace(/\(([^)]*)\)/g, (match, inner) => `(${inner.replace(/<br\s*\/?>/gi, ' ').replace(/\s+/g, ' ').trim()})`)
        // Гарантируем перенос после каждой строки варианта, если следующая не начинается с <br>
        .replace(/(<br><strong>\d+\)<\/strong>[^<]*)(?!\s*<br>)/g, '$1<br>')

        // Форматируем варианты ответов с буквами
        .replace(/(^|\.\s|\s)([А-ЯЁ])\)\s*/gm, '$1<br><strong>$2)</strong> ')

        // Специальное форматирование для заданий типа "Выберите один или несколько правильных ответов"
        .replace(/(Выберите один или несколько правильных ответов\.?\s*)/gi, '<br><strong>$1</strong><br>')
        .replace(/(Укажите варианты ответов[^.]*\.?\s*)/gi, '<strong>$1</strong><br>')
        .replace(/(Запишите номера ответов\.?\s*)/gi, '<strong>$1</strong><br>')
        .replace(/(Установите соответствие[^.]*\.?\s*)/gi, '<br><strong>$1</strong><br>')
        .replace(/(К каждой позиции[^.]*\.?\s*)/gi, '<strong>$1</strong><br>')
        .replace(/(Запишите в таблицу[^.]*\.?\s*)/gi, '<strong>$1</strong><br>')

        // Форматируем инструкции к заданиям
        .replace(/(Прочитайте текст и выполните задания\.?\s*)/gi, '<strong>$1</strong><br>')

        // Убираем множественные переносы строк
        .replace(/(<br\s*\/?>){3,}/g, '<br><br>')

        // Если точка/знак препинания оказался на новой строке: склеиваем с предыдущей
        .replace(/<br>\s*([\.,;:!?])/g, '$1')
        // После завершающего знака переносим открывающую кавычку на новую строку
        .replace(/([\.!\?])\s*(["«])/g, '$1<br>$2')

        // Убираем лишние пробелы
        .replace(/\s+/g, ' ')

        // Убираем пробелы в начале и конце
        .trim()

        // Убираем <br> в самом начале, если есть
        .replace(/^<br\s*\/?>/i, '');
}

export { copyToClipboard, formatTaskText };